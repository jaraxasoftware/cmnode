type: module
name: login_api
spec:
  decoders:
    login_with_email:
      object:
        method: POST
        headers:
          app:
            any: text
        body:
          object:
            email:
              any: email
            password:
              non_empty: text
    login_with_username:
      object:
        method: POST
        headers:
          app:
            any: text
        body:
          object:
            username:
              any: text
            password:
              non_empty: text
    uid_found:
      object:
        context: uid_lookup
        data:
          object:
            value:
              any: number
    uid_not_found:
      object:
        context: uid_lookup
        data:
          empty: list
    success:
      object:
        status:
          keyword: ok
        user:
          any: object
    error:
      object:
        status:
          keyword: error
  update:
    login_with_email:
      model:
        app:
          key: 
            key: headers.app
          in:
            config:
              key: apps
        uid:
          hash:
            lowercase:
              key: body.email
        passwd:
          key: body.password
      cmds:
        - effect: service
          encoder: login
    login_with_username:
      model:
        app:
          key: 
            key: headers.app
          in:
            config:
              key: apps
        username:
          key: body.username
        passwd:
          key: body.password
      cmds:
        - effect: db
          encoder: uid_lookup
    uid_found:
      model:
        uid:
          key: data.value
      cmds:
        - effect: service
          encoder: login
    error:
      cmds:
        - effect: terminate
          encoder: forbidden
    uid_not_found:
      cmds:
        - effect: terminate
          encoder: forbidden
    success:
      model:
        user:
          key: user
      cmds:
        - effect: terminate
          encoder: success
  encoders:
    uid_lookup:
      object:
        context: uid_lookup
        bucket:
          keyword:
            key: app.db
        get:
          object:
            subject: username
            predicate: is
            object:
              key: username
    login:
      object:
        service: login
        params:
          object:
            uid:
              key: uid 
            passwd:
              key: passwd
            bucket:
              keyword:
                key: app.db
    success:
      object:
        status: 200
        headers:
          content-type: application/json
        body:
          key: user
