type: module
name: login_api
spec:
  decoders:
    login_with_email:
      object:
        method: POST
        body:
          object:
            email:
              any: email
            password:
              non_empty: text
    login_with_username:
      object:
        method: POST
        body:
          object:
            username:
              any: text
            password:
              non_empty: text
    id_found:
      object:
        service: user_id_find
        status:
          keyword: ok
        id:
          non_empty: text
    id_not_found:
      object:
        service: user_id_find
        status:
          keyword: error
        id:
          non_empty: text
    success:
      object:
        status:
          keyword: ok
        user:
          any: object
    error:
      object:
        status:
          keyword: error
  update:
    login_with_email:
      model:
        email:
          key: body.email
        passwd:
          encoder: passwd_hash
      cmds:
        - effect: service
          encoder: email_lookup 
    login_with_username:
      model:
        username:
          key: body.username
        passwd:
          encoder: passwd_hash
      cmds:
        - effect: service
          encoder: username_lookup
    id_found:
      model:
        id:
          key: id 
      cmds:
        - effect: service
          encoder: login
    error:
      cmds:
        - effect: terminate
          encoder: forbidden
    id_not_found:
      cmds:
        - effect: terminate
          encoder: forbidden
    success:
      model:
        user:
          key: user
      cmds:
        - effect: terminate
          encoder: success
  encoders:
    passwd_hash:
      pbkdf2: @body.password
      using:
        config: @security.pbkdf2
    email_lookup:
      object:
        service: user_id_find
        params:
          email:
            key: email
          bucket:
            keyword:
              key: app.db
    username_lookup:
      object:
        service: user_id_find
        params:
          username:
            key: username
          bucket:
            keyword:
              key: app.db
    login:
      object:
        service: login
        params:
          object:
            id:
              key: id 
            passwd:
              key: passwd
            bucket:
              keyword:
                key: app.db
    success:
      object:
        status: 200
        headers:
          content-type: application/json
        body:
          key: user
