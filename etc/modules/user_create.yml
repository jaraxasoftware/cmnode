type: module
name: user_create 
spec:
  decoders:
    register:
      object:
        bucket:
          any: keyword
        first:
          non_empty: text
        last:
          non_empty: text
        email:
          any: email
        lang:
          one_of:
            - en
            - fr
            - es
        username:
          non_empty: text
    success:
      object: 
        context: registration
        status: 
          keyword: ok
    error:
      object:
        status:
          keyword: error
        error:
          other_than:
            keyword: conflict
    conflict:
      object: 
        context: registration
        status:
          keyword: error
        error: 
          keyword: conflict
  update:
    register:
      model:
        object:
          id:
            uuid: {}
          bucket:
            key: bucket
          first:
            key: first
          last:
            key: last
          email:
            lowercase:
              key: email
          lang:
            key: lang
          username:
            lowercase:
              key: username
      cmds:
        - effect: db
          encoder: registration
    success:
      cmds:
        - effect: terminate
          encoder: success
    conflict:
      cmds:
        - effect: terminate
          encoder: conflict
  encoders:
    success:
      object:
        status:
          keyword: ok
        id:
          key: id
    conflict:
      object:
        status:
          keyword: conflict
    registration:
      object:
        context: registration
        bucket:
          key: bucket
        insert:
          - object:
              subject: email 
              predicate:
                key: email
              object: owned_by
              value:
                key: id
          - object:
              subject: username
              predicate:
                key: username
              object: owned_by
              value:
                key: id
          - object:
              subject: user 
              predicate: has_id 
              object:
                key: id
              value:
                object:
                  first:
                    key: first
                  last:
                    key: last
                  id:
                    key: id
                  email:
                    key: email
                  lang:
                    key: lang
                  username:
                    key: username
