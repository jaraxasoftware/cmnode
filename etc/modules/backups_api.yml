version: 1.0
type: module
category: server
name: backups_api 
spec:
  decoders:
    backup_summary:
      object:
        method: "POST"
        headers:
          object:
            content-type: "application/json"
            app-id: "nk"
            app-secret: "nk"
        body:
          object:
            env:
              any: text
            backup:
              any: text
            kind:
              one_of:
                - elastic
                - cockroach
            name:
              any: text
            db:
              any: text
            elapsed:
              any: number
            status:
              one_of:
                - error
                - success
            started:
              object:
                year:
                  any: number
                month:
                  any: number
                day:
                  any: number
                hour:
                  any: number
                minute:
                  any: number
                second:
                  any: number
            job:
              any: number
    backup_summary_written:
      object:
        context:
          keyword: write
        bucket:
          keyword: backups
        status:
          keyword: ok
    recent_backups:
      object:
        action: "backups"
    recent_backups_found:
      object:
        context:
          keyword: read
        bucket:
          keyword: backups
        value:
          any: list
    start_backup:
      object:
        action: "backup"
        name:
          any: text
        database:
          any: text
        env:
          any: text
        kind:
          any: text
    backup_error:
      object:
        status:
          keyword: error
        context:
          one_of:
            - keyword: new_backup
    backup_ack:
      object:
        status: 
          keyword: ok
        context:
          keyword: new_backup
    backups_subscription:
      object:
        action: "subscribe"
        topic: "backups"
    backups_notification:
      object:
        backups:
          any: object
    cancel_backup:
      object:
        action: cancel
        backup:
          any: number
    backup_cancelled:
      object:
        context:
          keyword: cancel_backup
        status:
          keyword: ok
    backup_finished:
      object:
        context:
          keyword: finish_backup
  update:
    backup_summary:
      model:
        backup:
          key: body
      cmds:
        - effect: queue
          encoder: backup_job_finished
        - effect: db_put
          encoder: backup_summary_entry
    backup_summary_written:
      cmds:
        - effect: notify
          encoder: backup_summary_ack
        - effect: terminate
    recent_backups:
      model:
        days:
          iterate:
            sequence:
              from: 0
              to: 4
          as: day
          with:
            pipe:
              - calendar:
                  days:
                    ago:
                      key: day
              - format:
                  pattern: "~4..0B~2..0B~2..0B"
                  params:
                    - key: year
                      in: date
                    - key: month
                      in: date
                    - key: day
                      in: date
            as: date
      cmds:
        - effect: db_get
          encoder: recent_backups_query
    recent_backups_found:
      model:
        backups:
          sort:
            iterate:
              key: value
            as: backup
            filter:
              config:
                key:
                  key: filter
                  in: prefs
                in:
                  key: databases 
                  in: filters
            with:
              object:
                env:
                  key: env
                  in:
                    key: info
                    in: backup
                elapsed:
                  key: elapsed 
                  in:
                    key: info
                    in: backup
                kind:
                  key: kind 
                  in:
                    key: info
                    in: backup
                status:
                  key: status 
                  in:
                    key: info
                    in: backup
                database:
                  key: db
                  in:
                    key: info
                    in: backup
                backup:
                  key: backup
                  in:
                    key: info
                    in: backup
                started:
                  format:
                    pattern: 
                      keyword: "iso8601"
                    date:
                      key: started
                      in:
                        key: info
                        in: backup
          by: started
          mode: 
            keyword: desc
      cmds:
        - effect: notify
          encoder: recent_backups
    backup_error:
      cmds:
        - effect: notify
          encoder: backup_error
        - effect: terminate
    start_backup:
      - when:
          encoder: is_admin
        model:
          new_backup:
            object:
              name:
                key: name
              database:
                key: database
              env:
                key: env
              kind:
                key: kind
        cmds:
          - effect: queue
            encoder: backup_job
      - cmds:
          - effect: notify
            encoder: forbidden
    backup_ack:
      cmds:
        - effect: notify
          encoder: backup_ack
    backups_subscription:
      - when:
          encoder: is_admin
        cmds:
          - effect: queue
            encoder: backups_subscription
      - cmds:
          - effect: notify
            encoder: forbidden
    backups_notification:
      model:
        backups_status:
          key: backups
      cmds:
        - effect: notify
          encoder: backups_status
    cancel_backup:
      - when:
          encoder: is_admin
        model:
          backup_job:
            key: backup
        cmds:
          - effect: queue
            encoder: backup_job_cancellation
      - cmds:
          - effect: notify
            encoder: forbidden
    backup_cancelled:
      cmds:
        - effect: notify
          encoder: backup_ack
    backup_finished:
      model:
        backup_job: "finished"
  encoders:
    backup_summary_entry:
      object:
        context:
          keyword: write
        bucket:
          keyword: backups
        items:
          - object:
              subject:
                format:
                  pattern: "~4..0B~2..0B~2..0B"
                  params:
                    - key: year
                      in: 
                        key: started
                        in: backup
                    - key: month 
                      in: 
                        key: started
                        in: backup
                    - key: day
                      in: 
                        key: started
                        in: backup
              predicate:
                key: db
                in: backup
              object:
                key: backup
                in: backup
              value:
                key: backup
    recent_backups_query:
      object:
        context:
          keyword: read
        bucket:
          keyword: backups
        subjects:
          key: days
        labels:
          object:
            predicate: "database"
            object: "backup"
            value: "info"
    recent_backups:
      object:
        backups:
          key: backups
    backups_status:
      object:
        backups:
          key: backups_status
    backup_ack:
      object:
        backup: "ack"
    backup_job:
      object:
        queue:
          keyword: backups_queue
        context:
          keyword: new_backup
        info:
          object:
            status: "Not started"
            name:
              key: name
              in: new_backup
            database:
              key: database
              in: new_backup
            env:
              key: env
              in: new_backup
            kind:
              key: kind
              in: new_backup
        task:
          keyword: backup
        params:
          object:
            name:
              key: name
              in: new_backup
            database:
              key: database
              in: new_backup
            kind:
              key: kind
              in: new_backup
            settings:
              key: env
              in: new_backup
    backup_job_cancellation:
      object:
        queue:
          keyword: backups_queue
        context:
          keyword: cancel_backup
        cancel:
          key: backup_job
    backup_job_finished:
      object:
        queue:
          keyword: backups_queue
        context:
          keyword: finish_backup
        finish:
          key: job
          in: backup
    backup_error:
      object:
        backup: "error"
    backups_subscription:
      object:
        context: 
          keyword: subscribe
        queue: 
          keyword: backups_queue
        topic: 
          keyword: backups
    backup_summary_ack:
      object:
        status: 200
        headers:
          content-type: "application/json"
        body:
          object:
            acknowledged: true
