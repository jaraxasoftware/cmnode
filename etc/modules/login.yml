type: module
name: login 
spec:
  decoders:
    login:
      object:
        bucket:
          any: keyword
        id:
          non_empty: text
        passwd:
          any: data
    password_success:
      object:
        context:
          keyword: passwd 
        status:
          keyword: ok
        data:
          object:
            value:
              key: passwd
    user_success:
      object:
        context:
          keyword: user
        status:
          keyword: ok
        data:
          object:
            value:
              object:
                first:
                  non_empty: text
                last:
                  non_empty: text
                id:
                  key: id
                email:
                  any: email
                lang:
                  non_empty: text
                username:
                  non_empty: text
    token_success:
      object:
        token:
          non_empty: text
    error:
      one_of:
        - object:
            context:
              keyword: passwd 
            status:
              keyword: ok
            data:
              object:
                value:
                  other_than:
                    key: passwd
        - object:
            context:
              keyword: user 
            status:
              keyword: ok
            data:
              empty: list
        - object:
            status:
              keyword: error
  update:
    login:
      model:
        object:
          id:
            key: id
          bucket:
            key: bucket
          passwd:
            key: passwd
      cmds:
        - effect: db
          encoder: query_for_passwd
    password_success:
      cmds:
        - effect: db
          encoder: query_for_user
    user_success:
      model:
        object:
          user:
            key: data.value
      cmds:
        - effect: service
          encoder: token
    token_success:
      model:
        object:
          user:
            merge:
              - key: user
              - object:
                  token:
                    key: token
      cmds:
        - effect: terminate
          encoder: profile
    error:
      cmds:
        - effect: terminate
          encoder: error
  encoders:
    query_for_passwd:
      object:
        context:
          keyword: passwd
        bucket:
          key: bucket
        get:
          object:
            subject: passwd
            predicate: for
            object:
              key: id
    query_for_user:
      object:
        context:
          keyword: user
        bucket:
          key: bucket
        get:
          object:
            subject: user 
            predicate: has_id
            object:
              key: id
    token:
      object:
        service: token_create
        params:
          bucket:
            key: bucket
          id:
            key: user.id
          ttl: 1000 
          acl: access
    profile:
      object:
        status:
          keyword: ok
        user:
          key: user

