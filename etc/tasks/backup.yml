version: 1.0
type: task
name: backup 
spec:
  - queue: 
      keyword: backups_queue
    notify:
      key: id
      in: params
    info:
      object:
        database:
          key: database
          in: params
        env:
          key: settings
          in: params
        kind:
          key: kind
          in: params
        status: "In progress"
  - attempt:
      kube:
        kind: job 
        name:
          replace:
            text: "_"
            with: "-"
            in:
              format:
                pattern: "backup-~s-~s"
                params:
                  - key: name
                    in: params
                  - key: database
                    in: params
        state: 
          keyword: present
        server:
          key: kubernetes
          in: settings
        namespace: "nc"
        props:
          object:
            labels:
              object:
                category: backups
                app:
                  replace:
                    text: "_"
                    with: "-"
                    in:
                      format:
                        pattern: "backup-~s-~s"
                        params:
                          - key: name
                            in: params
                          - key: database
                            in: params
            spec:
              object:
                imagePullSecrets:
                  list:
                    - name: docker
                volumes:
                  - name: config
                    configMap:
                      name: backups
                restartPolicy: "Never"
                containers:
                  list:
                    - object:
                        name: backups
                        imagePullPolicy: 
                          text: "Always"
                        image: netcomposer/backups:latest
                        stdin: 
                          keyword: true
                        tty:
                          keyword: true
                        volumeMounts:
                          iterate:
                            list:
                              - single_backup
                              - backups
                              - erlang
                              - slack
                              - cluster
                              - webhook
                              - s3
                              - s3_cockroach
                              - s3_elastic
                          as: s
                          with:
                            object:
                              name: config
                              mountPath: 
                                format: "/opt/backups/etc/settings/~s.yml"
                                params:
                                  - key: s
                        env:
                          list:
                            - object:
                                name: "BACKUP_TASK"
                                value: "single_backup"
                            - object:
                                name: "BACKUP_DATABASE"
                                value:
                                  key: database
                                  in: params
                            - object:
                                name: "BACKUP_NAME"
                                value:
                                  key: name
                                  in: params
                            - object:
                                name: "BACKUP_KIND"
                                value:
                                  key: kind
                                  in: params
                            - object:
                                name: "BACKUP_ID"
                                value:
                                  text:
                                    key: id
                                    in: params
    onerror:
      - queue: 
          keyword: backups_queue
        notify:
          key: id
          in: params
        info:
          object:
            database:
              key: database
              in: params
            env:
              key: settings
              in: params
            kind:
              key: kind
              in: params
            status: "Error"
